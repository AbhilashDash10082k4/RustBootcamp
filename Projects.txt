Beginner Rust Projects:
CLI Calculator: Build a simple command-line calculator that can perform basic operations (addition, subtraction, multiplication, division).
To-Do List: Create a basic CLI to-do list where users can add, remove, and display tasks.
Word Counter: Develop a tool that counts the number of words, characters, and lines in a text file.
Guessing Game: A terminal-based game where the user has to guess a randomly generated number with hints for higher or lower.
Temperature Converter: Build a program that converts temperatures between Celsius and Fahrenheit.
Basic HTTP Client: Write a simple HTTP client that can fetch and display content from a given URL using Rust’s reqwest crate.
File Renamer: Create a script that renames files in a directory based on user input or a pattern.
Caesar Cipher Encoder/Decoder: Implement a basic encryption/decryption tool using Caesar cipher logic.
Simple Timer: Build a CLI countdown timer that accepts time as input and prints a notification when time’s up.
Fibonacci Sequence Generator: Write a program that generates the Fibonacci sequence up to a user-defined number.
Intermediate Rust Projects:
Chat Application: Develop a simple multi-user chat app using TCP and multithreading.
File Compression Tool: Create a CLI tool that compresses and decompresses files using Rust’s flate2 crate.
Multithreaded Web Scraper: Build a web scraper that can scrape data from multiple URLs simultaneously using threads.
Markdown Parser: Implement a tool that converts markdown files into HTML.
Simple Web Server: Develop a lightweight web server using Rust’s hyper crate and serve static content.
Task Scheduler: Create a tool that can schedule and run tasks (like cron jobs) at specified intervals.
Library Management System: Build a CLI library system where users can borrow and return books, with data stored in a simple JSON or SQLite database.
Sudoku Solver: Implement a command-line Sudoku solver using backtracking.
Text-Based Adventure Game: Create a simple text-based RPG or adventure game with basic mechanics like combat, inventory, and exploration.
JSON Validator: Write a program that validates JSON files against a schema.
Advanced Rust Projects:
Blockchain Implementation: Build a simple blockchain from scratch, implementing proof of work and peer-to-peer networking.
Operating System Kernel: Develop a basic OS kernel using Rust, handling tasks like booting and managing memory.
Compiler: Write a simple compiler for a custom programming language, implementing parsing, syntax checking, and code generation.
Game Engine: Create a basic 2D game engine using libraries like ggez or amethyst for rendering and input handling.
Distributed Key-Value Store: Implement a fault-tolerant, distributed key-value store with replication using the Raft consensus algorithm.
Rust-based Web Framework: Build your own lightweight web framework that supports routing and middleware handling.
Deep Learning Framework: Create a simple deep learning library from scratch, implementing neural networks and backpropagation.
Database Engine: Develop a minimal database engine that supports basic SQL queries and in-memory data storage.
Networking Library: Implement a high-performance networking library for building fast, asynchronous TCP/UDP applications.
Smart Contract Platform: Build a Rust-based smart contract platform like Ethereum, implementing virtual machine functionality for running smart contracts.